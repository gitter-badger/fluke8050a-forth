\ load development code    -*- forth -*-
\ needs l

\ reset


: blink ( -- )  \ blink the on-board LED until a key is pressed
  OMODE-PP LED io-mode!  begin  LED iox!  100 ms  key? until ;

\ -----------------------------------------------------------------------------
\ stuff to move to 'l' when stable


\ -----------------------------------------------------------------------------

: showdigit ( n x -- )
  >r
  256 * digits +
  32 64 r> 8 + 0 raster
  ;

: showdot ( x -- )
  64 60 do
    dup 4 + over 1+ do i j putpixel loop
  loop drop ;

: shownum ( u -- )
  \ clear
  10 /mod 10 /mod 10 /mod
  -4 showdigit 28 showdigit 60 showdot 64 showdigit 96 showdigit
  display ;

\ -----------------------------------------------------------------------------

: keyloop begin dup 1000 ms execute key? until drop ;

: func.
    fluke_func_a io@ ." FA=" . 32 emit
    fluke_func_b io@ ." FB=" . 32 emit
    fluke_func_c io@ ." FC=" . 32 emit
    fluke_func_d io@ ." FD=" . cr
;

: range.
    fluke_rng_a io@ ." RNGA=" . 32 emit
    fluke_rng_b io@ ." RNGB=" . 32 emit
    fluke_rng_c io@ ." RNGC=" . 32 emit
;

\ most significant digit is either 'blank' for 0 value or 1 for 1 value
\ rest of digits are value 15 for blank

\ detect overrange configuration, with only leading "1" digit and
\ 4 following blank digits  -- blank digits are apparently binary 15

\ detect improper switch settings wit 4 decimal points and no digit segments

\ polarity sign disabled for Vac, mA and k-ohm functions.

\ detect conductance switch configuration (k-ohm,200,2k, 2000k, 20M)
\ detect diode test - k-ohm, 2, 200, 20M)

\ detect dB with impedence switching mode

0 variable strobe-loss
0 variable d0  \ 8 - minus, 4 - plus, 2 - dB, 1 - 1
0 variable d1  \ BCD 
0 variable d2  \ BCD
0 variable d3  \ BCD
0 variable d4  \ BCD
0 variable hv
0 variable fluke_func
0 variable fluke_range

: getswitches  ( -- )
    fluke_func_a io@                \ FA 0=DC, 1=AC
    fluke_func_b io@       shl +    \ 
    fluke_func_c io@  2 lshift +
    fluke_func_d io@  3 lshift +
    fluke_func !

    fluke_rng_a  io@
    fluke_rng_b  io@       shl +
    fluke_rng_c  io@  2 lshift +
    fluke_range !
;


: getdigit ( io variable -- )
    swap  ( variable io )
    dup  ( variable io io )
    begin
	io@ if
	    ( variable io )
	    fluke_z io@                     \ bit 0  ( variable io sum )
	    fluke_y io@       shl +         \ bit 1  ( variable io sum )
	    fluke_x io@  2 lshift +         \ bit 2  ( variable io sum )
	    fluke_w io@  3 lshift +         \ bit 3  ( variable io sum )
	    fluke_dp io@ 8 lshift +         \ bit 4  ( decimal point )
	    fluke_hv io@ hv !
	    swap  ( variable sum io )
	    io@ 0= if
		1 strobe-loss +!
	    then
	    ( variable sum )
	    swap !
	    0
	else
	    ( variable io )
	    dup dup ( variable io io )
	then
    0= until	
;

: print-digit
    dup
    1 8 lshift and if ." ." then
    15 and .
;

: parse-display
;

: scan 
    fluke_st0 d0 getdigit
    fluke_st1 d1 getdigit
    fluke_st2 d2 getdigit
    fluke_st3 d3 getdigit
    fluke_st4 d4 getdigit
    getswitches

    d0 @ 1 and print-digit  \ only one leading digit
    d1 @ print-digit
    d2 @ print-digit
    d3 @ print-digit
    d4 @ print-digit
;
