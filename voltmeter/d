\ load development code    -*- forth -*-
\ needs l

\ reset


: blink ( -- )  \ blink the on-board LED until a key is pressed
  OMODE-PP LED io-mode!  begin  LED iox!  100 ms  key? until ;

\ -----------------------------------------------------------------------------
\ stuff to move to 'l' when stable


\ -----------------------------------------------------------------------------

: showdigit ( n x -- )
  >r
  256 * digits +
  32 64 r> 8 + 0 raster
  ;

: showdot ( x -- )
  64 60 do
    dup 4 + over 1+ do i j putpixel loop
  loop drop ;

: shownum ( u -- )
  \ clear
  10 /mod 10 /mod 10 /mod
  -4 showdigit 28 showdigit 60 showdot 64 showdigit 96 showdigit
  display ;

\ -----------------------------------------------------------------------------

: func.
  fluke_func_a io@ ." FA=" . 32 emit
  fluke_func_b io@ ." FB=" . 32 emit
  fluke_func_c io@ ." FC=" . 32 emit
  fluke_func_d io@ ." FD=" . cr
;

0 variable d0
0 variable d1
0 variable d2
0 variable d3
0 variable d4

: getdigit ( io variable -- )
    swap  ( variable io )
    dup  ( variable io io )
    begin
	io@ if
	    ( variable io )
	    fluke_z io@                     \ bit 0  ( variable io sum )
	    fluke_y io@       shl +         \ bit 1  ( variable io sum )
	    fluke_x io@  2 lshift +         \ bit 2  ( variable io sum )
	    fluke_w io@  3 lshift +         \ bit 3  ( variable io sum )
	    fluke_dp io@ 8 lshift +         \ bit 4  ( decimal point )
	    swap  ( variable sum io )
	    io@ 0= if
		." lost strobe "cr
	    then
	    ( variable sum )
	    swap !
	    0
	else
	    ( variable io )
	    dup dup ( variable io io )
	then
    0= until	
;

: print-digit
    dup
    1 8 lshift and if ." ." then
    15 and .

;

: scan 
    fluke_st0 d0 getdigit
    fluke_st1 d1 getdigit
    fluke_st2 d2 getdigit
    fluke_st3 d3 getdigit
    fluke_st4 d4 getdigit
    
    d0 @ print-digit
    d1 @ print-digit
    d2 @ print-digit
    d3 @ print-digit
    d4 @ print-digit
;
