\ load development code    -*- forth -*-
\ needs l

\ reset


: blink ( -- )  \ blink the on-board LED until a key is pressed
  OMODE-PP LED io-mode!  begin  LED iox!  100 ms  key? until ;

\ -----------------------------------------------------------------------------

: showdigit ( n x -- )
  >r
  0 max 9 min
  256 * digits +
  32 64 r> 8 + 0 raster
  ;

: showdot ( x -- )
  64 60 do
    dup 4 + over 1+ do i j putpixel loop
  loop drop ;

: shownum ( u -- )
  \ clear
  10 /mod 10 /mod 10 /mod
  -4 showdigit 28 showdigit 60 showdot 64 showdigit 96 showdigit
  display ;


\ render a bitmap in one operation.  experimental alternative
\ for rendering a character bitmap from a font in many fewer
\ SPI transactions.  takes advantage of "windowing" logic in
\ ILI9341 controller
: raster ( addr xsize ysize x y -- )
    \ yeah, this is so much easier than having local variables
    3 pick ( addr xsize ysize x y -- addr xsize ysize x y xsize )
    2 pick ( addr xsize ysize x y xsize -- )
    + 1-   ( addr xsize ysize x y x1 )
    over   ( addr xsize ysize x y x1 y )
    4 pick ( addr xsize ysize x y x1 y ysize )
    + 1-   ( addr xsize ysize x y x1 y1 )
    setwindow ( addr xsize ysize x0 y0 x1 y1 -- addr xsize ysize )
    *      ( addr #bits )
    +spi
    
    \ now, iterate over all the bits and write each pixel value out, including
    \ both the foreground and background pixels
    
    \ xxx need to scale #bits to words or change loop to bits?  probably
    \ carry xsize and ysize along and handle partial bytes in rows.
    32 /
    0 do ( addr #bits 0 -- addr )
	32 0 do
	    i $1f xor bit over bit@ if
		tft-fg @
	    else
		tft-bg @
	    then
	    h>tft
	loop
	4 +
    loop drop
    -spi
;
